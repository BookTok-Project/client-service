name: Go CI/CD with Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  deploy:
    name: Deploy via Docker
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t client-service:latest .

      - name: Save Docker image to archive
        run: docker save client-service:latest -o client-service.tar

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Transfer Docker image to server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no client-service.tar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/client-service.tar

      - name: Load and run container on server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            sudo docker load -i /tmp/client-service.tar &&
            sudo docker stop client-service-container || true &&
            sudo docker rm client-service-container || true &&
            sudo docker run -d --name client-service-container -p 5000:5000 client-service:latest
          '
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
